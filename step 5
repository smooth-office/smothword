/**
* Create paragraph and apply formatting.
* 
* @param document represents the Word document.
*/
static WParagraphStyle createParagraphStyle(WordDocument document) throws Exception 
{
    //Apply the styles.
    WParagraphStyle style = (WParagraphStyle) document.addParagraphStyle("Normal");
    WCharacterFormat characterFormat = style.getCharacterFormat();
    WParagraphFormat paragraphFormat = style.getParagraphFormat();
    appendCharacterFormatToText(style.getCharacterFormat(), 11f, "Calibri");
    paragraphFormat.setBeforeSpacing((float) 0);
    paragraphFormat.setAfterSpacing((float) 8);
    paragraphFormat.setLineSpacing(13.8f);
    style = (WParagraphStyle) document.addParagraphStyle("Heading 1");
    characterFormat = style.getCharacterFormat();
    paragraphFormat = style.getParagraphFormat();
    style.applyBaseStyle("Normal");
    appendCharacterFormatToText(style.getCharacterFormat(), 16f, "Calibri Light");
    characterFormat.setTextColor((ColorSupport.fromArgb(46, 116, 181)).clone());
    paragraphFormat.setBeforeSpacing((float) 12);
    paragraphFormat.setAfterSpacing((float) 0);
    paragraphFormat.setKeep(true);
    paragraphFormat.setKeepFollow(true);
    paragraphFormat.setOutlineLevel(OutlineLevel.Level1);
    return style;
}
 
/**
* Apply characterFormat
*/
static void appendCharacterFormatToText(WCharacterFormat characterFormat, float fontSize, String fontName) throws Exception 
{
    characterFormat.setFontSize(fontSize);
    characterFormat.setFontName(fontName);
}
 
/**
* Apply paragraphFormat
*/
static void appendParagraphFormatToParagraph(WParagraphFormat paragraphFormat, float afterSpacingValue, float lineSpacingValue) throws Exception 
{
    paragraphFormat.setAfterSpacing(afterSpacingValue);
    paragraphFormat.setLineSpacing(lineSpacingValue);
}   
